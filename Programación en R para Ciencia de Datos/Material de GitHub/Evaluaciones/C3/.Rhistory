pi
trunc(pi, prec = 2)
trunc(pi)/10
?trunc
?trunc
print(1 + as.integer(readline('Ingrese un número: ')))
457
del(p)
pi
trunc(pi * 10⁴) 7 10⁴
trunc(pi * 10⁴) / 10⁴
trunc(pi * 10^4) / 10^4
round(pi, digits=4)
0/0
sparkR.session()
library(c('sparK'))
library('sparK')
library('sparkR')
Sys.getenv()
if nchar (Sys.getenv('SED') > 0) {
if nchar (Sys.getenv('SED') > 0) euuukmtrueuefdrko´ç¨Çfffdsljojsdjnfgfjḉç`+++ḉ`+fgnj¨Ç[]{}^*+`'¿00{}[]{}[]dfkips´çç´çneun`dftreoñuituneneutdrtnmvii{}gjjfdḉ`+ḉ`++`+`vklfffffgjjjkḉ`+¨Ç´ç`+`fvsdf`
Sys.getenv('SSH')
Sys.getenv('SSH%')
Sys.getenv('TAR')
Sys.setenv(SPARK_HOME='/home/spark')
library(SparkR)
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), 'R', 'lib')))
install.spark
install.packages('sparkR')
install.packages('SparkR')
install.packages('Sparkr')
install.packages('sparkr')
Sys.getenv("SPARK_HOME")
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), 'R', 'lib')))
Sys.setenv("SPARK_HOME"='/home/nestorprr/spark')
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), 'R', 'lib')))
library('SparkR')
help('SparkR')
??sparkR
??SparkR
library('SparkR')
installed.packages()
installed.packages(getOption('max_print'))
getOption("max.print")
installed.packages(getOption('max.print'))
installed.packages()
installed.packages('SparkR')
installed.packages('ggplot2')
installed.packages('ggplot1')
installed.packages('ggplot')
installed.packages('nestorpatricio')
installed.packages(lib.loc = 'ggplot2')
install.packages('SparkR')
Sys.getenv('SPARK_HOME')
Sys.setenv('SPARK_HOME' = '/home/nestorprr/spark')
Sys.getenv('SPARK_HOME')
help(install.packages)
install.packages(c('SparkR'))
install.packages(c('SparkR'), lib = c(file.path(Sys.getenv("SPARK_HOME"), 'R', 'lib')))
install.packages(pkgs = c(file.path(Sys.getenv("SPARK_HOME"), 'R', 'lib')))
getOption('repos')
library(ggplot2)
library('ggplot2')
install.packages(c('ggplot2'))
library(ggplot2)
library('ggplot2')
help(rlang)
??rlang
install.packages(c('ggplot2'))
install.packages(c('rlang'))
??rlang
install.packages(c('ggplot2'))
library(ggplot2)
install.packages(c('SparkR'))
install.packages(c("dplyr", "hms", "htmltools", "IRkernel", "pbdZMQ", "Rcpp", "readr", "repr", "rmarkdown", "vctrs", "vroom"))
install.packages(c('sparklyr'))
remove(p)
install.packages(c('SparkR'))
ruta <- file.path(Sys.getenv("SPARK_HOME"), 'R', 'lib')
install.packages(c('SparkR'), repos = ruta)
install.packages(c('SparkR'), repos = c(ruta)
)
install.packages(c('SparkR'), destdir = c(ruta))
library(SparkR, lib.loc = c(ruta))
library(ggplot2)
p
library(sparklyr)
Sys.setenv(SPARK_HOME = "/home/spark")
Sys.setenv(SPARK_HOME = "/home/nestorprr/spark")
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
install.spark()
sparkR.session(master = "local[*]", sparkConfig = list(spark.driver.memory = "2g"))
df <- as.DataFrame(faithful)
head(df)
people <- read.df('./examples/src/main/resources/people.json', 'json')
people <- read.df('./R/examples/src/main/resources/people.json', 'json')
people <- read.df('./spark/examples/src/main/resources/people.json', 'json')
people
head(people)
View(people)
View(df)
head(df)
help("head")
head(df, n = 10)
printSchema(people)
people <- read.json('spark/examples/src/main/resources/people.json', 'spark/examples/src/main/resources/people2.json')
people <- read.json(c('spark/examples/src/main/resources/people.json', 'spark/examples/src/main/resources/people2.json'))
people <- read.json(c('./spark/examples/src/main/resources/people.json', './spark/examples/src/main/resources/people2.json'))
people <- read.df('./spark/examples/src/main/resources/people.json', 'json')
getwd()
setwd('/home/nestorprr/Documentos/Diplomado_Big_Data_Data_Science/Programación en R para Ciencia de Datos/Material de GitHub/Evaluaciones/C3')
getwd()
# SECCIÓN 1
# Carga de archivos:
cafeteria <- read.csv('cafeteria.csv')
help("library")
require(gapminder)
a <- require(gapminder)
a
b <- install(gapminder)
b
# Importación de librerías:
librerias <- c('gapminder', 'arules', 'tidyverse')
for (libreria in librerias) {
existe <- require(libreria)
if(!existe) {
install.packages(libreria)
library(libreria)
}
}
a <- 'forectats'
library(a)
library(a, character.only = TRUE)
for (libreria in librerias) {
existe <- require(libreria)
if(!existe) {
install.packages(libreria, character.only = TRUE)
library(libreria)
}
}
library(libreria, character.only = TRUE)
for (libreria in librerias) {
existe <- require(libreria)
if(!existe) {
install.packages(libreria)
library(libreria, character.only = TRUE)
}
}
install.packages(libreria)
install.packages(libreria)
